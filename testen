import com.oreilly.servlet.MultipartRequest;
import java.io.File;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.Enumeration;

public class MultiFileUploadServlet extends HttpServlet {
    // 파일 업로드 경로
    private static final String UPLOAD_DIRECTORY = "/uploads";

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // MultipartRequest 객체 생성 (파일 크기 제한 설정, 경로 설정)
        int maxFileSize = 50 * 1024 * 1024;  // 50MB
        String uploadPath = getServletContext().getRealPath(UPLOAD_DIRECTORY);

        // 업로드 처리
        MultipartRequest multipartRequest = new MultipartRequest(request, uploadPath, maxFileSize);

        // 업로드된 파일을 처리하기 위한 Enumeration 사용
        Enumeration<String> fileNames = multipartRequest.getFileNames();

        while (fileNames.hasMoreElements()) {
            // 각 파일의 이름을 가져온다
            String fieldName = fileNames.nextElement();
            File uploadedFile = multipartRequest.getFile(fieldName);  // 파일 객체 가져오기
            if (uploadedFile != null) {
                // 파일 업로드가 성공적으로 이루어진 경우
                String filePath = uploadedFile.getAbsolutePath();
                System.out.println("Uploaded file path: " + filePath);
                // 필요한 경우 파일에 대한 후처리 작업을 추가할 수 있음
            } else {
                // 파일이 업로드되지 않은 경우
                System.out.println("No file uploaded for field: " + fieldName);
            }
        }

        response.getWriter().println("File upload completed successfully.");
    }
}
